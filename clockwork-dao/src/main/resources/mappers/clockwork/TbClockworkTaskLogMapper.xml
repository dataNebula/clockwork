<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.adx.clockwork.dao.mapper.clockwork.TbClockworkTaskLogMapper">
  <resultMap id="BaseResultMap" type="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLog">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="real_command" jdbcType="VARCHAR" property="realCommand" />
    <result column="parameter" jdbcType="VARCHAR" property="parameter" />
    <result column="log_name" jdbcType="VARCHAR" property="logName" />
    <result column="trigger_time" jdbcType="TIMESTAMP" property="triggerTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="execute_time" jdbcType="TIMESTAMP" property="executeTime" />
    <result column="running_time" jdbcType="TIMESTAMP" property="runningTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="execute_type" jdbcType="INTEGER" property="executeType" />
    <result column="run_engine" jdbcType="VARCHAR" property="runEngine" />
    <result column="return_code" jdbcType="INTEGER" property="returnCode" />
    <result column="return_msg" jdbcType="VARCHAR" property="returnMsg" />
    <result column="fill_data_time" jdbcType="VARCHAR" property="fillDataTime" />
    <result column="batch_number" jdbcType="BIGINT" property="batchNumber" />
    <result column="rerun_batch_number" jdbcType="BIGINT" property="rerunBatchNumber" />
    <result column="is_end" jdbcType="BIT" property="isEnd" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, task_id, task_name, group_id, node_id, `status`, pid, real_command, `parameter`, 
    log_name, trigger_time, start_time, execute_time, running_time, end_time, execute_type, 
    run_engine, return_code, return_msg, fill_data_time, batch_number, rerun_batch_number, 
    is_end, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLogExample" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_clockwork_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_clockwork_task_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_task_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLogExample">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLog" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_task_log (task_id, task_name, group_id, 
      node_id, `status`, pid, 
      real_command, `parameter`, log_name, 
      trigger_time, start_time, execute_time, 
      running_time, end_time, execute_type, 
      run_engine, return_code, return_msg, 
      fill_data_time, batch_number, rerun_batch_number, 
      is_end, create_time, update_time
      )
    values (#{taskId,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{nodeId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{realCommand,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, #{logName,jdbcType=VARCHAR}, 
      #{triggerTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{executeTime,jdbcType=TIMESTAMP}, 
      #{runningTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{executeType,jdbcType=INTEGER}, 
      #{runEngine,jdbcType=VARCHAR}, #{returnCode,jdbcType=INTEGER}, #{returnMsg,jdbcType=VARCHAR}, 
      #{fillDataTime,jdbcType=VARCHAR}, #{batchNumber,jdbcType=BIGINT}, #{rerunBatchNumber,jdbcType=BIGINT}, 
      #{isEnd,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLog" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_task_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="realCommand != null">
        real_command,
      </if>
      <if test="parameter != null">
        `parameter`,
      </if>
      <if test="logName != null">
        log_name,
      </if>
      <if test="triggerTime != null">
        trigger_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="executeTime != null">
        execute_time,
      </if>
      <if test="runningTime != null">
        running_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="executeType != null">
        execute_type,
      </if>
      <if test="runEngine != null">
        run_engine,
      </if>
      <if test="returnCode != null">
        return_code,
      </if>
      <if test="returnMsg != null">
        return_msg,
      </if>
      <if test="fillDataTime != null">
        fill_data_time,
      </if>
      <if test="batchNumber != null">
        batch_number,
      </if>
      <if test="rerunBatchNumber != null">
        rerun_batch_number,
      </if>
      <if test="isEnd != null">
        is_end,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="realCommand != null">
        #{realCommand,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="logName != null">
        #{logName,jdbcType=VARCHAR},
      </if>
      <if test="triggerTime != null">
        #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeTime != null">
        #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runningTime != null">
        #{runningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeType != null">
        #{executeType,jdbcType=INTEGER},
      </if>
      <if test="runEngine != null">
        #{runEngine,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=INTEGER},
      </if>
      <if test="returnMsg != null">
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="fillDataTime != null">
        #{fillDataTime,jdbcType=VARCHAR},
      </if>
      <if test="batchNumber != null">
        #{batchNumber,jdbcType=BIGINT},
      </if>
      <if test="rerunBatchNumber != null">
        #{rerunBatchNumber,jdbcType=BIGINT},
      </if>
      <if test="isEnd != null">
        #{isEnd,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLogExample" resultType="java.lang.Long">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_clockwork_task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.realCommand != null">
        real_command = #{record.realCommand,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null">
        `parameter` = #{record.parameter,jdbcType=VARCHAR},
      </if>
      <if test="record.logName != null">
        log_name = #{record.logName,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerTime != null">
        trigger_time = #{record.triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executeTime != null">
        execute_time = #{record.executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.runningTime != null">
        running_time = #{record.runningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executeType != null">
        execute_type = #{record.executeType,jdbcType=INTEGER},
      </if>
      <if test="record.runEngine != null">
        run_engine = #{record.runEngine,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCode != null">
        return_code = #{record.returnCode,jdbcType=INTEGER},
      </if>
      <if test="record.returnMsg != null">
        return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.fillDataTime != null">
        fill_data_time = #{record.fillDataTime,jdbcType=VARCHAR},
      </if>
      <if test="record.batchNumber != null">
        batch_number = #{record.batchNumber,jdbcType=BIGINT},
      </if>
      <if test="record.rerunBatchNumber != null">
        rerun_batch_number = #{record.rerunBatchNumber,jdbcType=BIGINT},
      </if>
      <if test="record.isEnd != null">
        is_end = #{record.isEnd,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_log
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=INTEGER},
      node_id = #{record.nodeId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      real_command = #{record.realCommand,jdbcType=VARCHAR},
      `parameter` = #{record.parameter,jdbcType=VARCHAR},
      log_name = #{record.logName,jdbcType=VARCHAR},
      trigger_time = #{record.triggerTime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      execute_time = #{record.executeTime,jdbcType=TIMESTAMP},
      running_time = #{record.runningTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      execute_type = #{record.executeType,jdbcType=INTEGER},
      run_engine = #{record.runEngine,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=INTEGER},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      fill_data_time = #{record.fillDataTime,jdbcType=VARCHAR},
      batch_number = #{record.batchNumber,jdbcType=BIGINT},
      rerun_batch_number = #{record.rerunBatchNumber,jdbcType=BIGINT},
      is_end = #{record.isEnd,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLog">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_log
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="realCommand != null">
        real_command = #{realCommand,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        `parameter` = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="logName != null">
        log_name = #{logName,jdbcType=VARCHAR},
      </if>
      <if test="triggerTime != null">
        trigger_time = #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeTime != null">
        execute_time = #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runningTime != null">
        running_time = #{runningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeType != null">
        execute_type = #{executeType,jdbcType=INTEGER},
      </if>
      <if test="runEngine != null">
        run_engine = #{runEngine,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=INTEGER},
      </if>
      <if test="returnMsg != null">
        return_msg = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="fillDataTime != null">
        fill_data_time = #{fillDataTime,jdbcType=VARCHAR},
      </if>
      <if test="batchNumber != null">
        batch_number = #{batchNumber,jdbcType=BIGINT},
      </if>
      <if test="rerunBatchNumber != null">
        rerun_batch_number = #{rerunBatchNumber,jdbcType=BIGINT},
      </if>
      <if test="isEnd != null">
        is_end = #{isEnd,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskLog">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_log
    set task_id = #{taskId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      node_id = #{nodeId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      real_command = #{realCommand,jdbcType=VARCHAR},
      `parameter` = #{parameter,jdbcType=VARCHAR},
      log_name = #{logName,jdbcType=VARCHAR},
      trigger_time = #{triggerTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      execute_time = #{executeTime,jdbcType=TIMESTAMP},
      running_time = #{runningTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      execute_type = #{executeType,jdbcType=INTEGER},
      run_engine = #{runEngine,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=INTEGER},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      fill_data_time = #{fillDataTime,jdbcType=VARCHAR},
      batch_number = #{batchNumber,jdbcType=BIGINT},
      rerun_batch_number = #{rerunBatchNumber,jdbcType=BIGINT},
      is_end = #{isEnd,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into tb_clockwork_task_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      task_id,
      task_name,
      group_id,
      node_id,
      `status`,
      pid,
      real_command,
      `parameter`,
      log_name,
      trigger_time,
      start_time,
      execute_time,
      running_time,
      end_time,
      execute_type,
      run_engine,
      return_code,
      return_msg,
      fill_data_time,
      batch_number,
      rerun_batch_number,
      is_end,
      create_time,
      update_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=INTEGER},
        #{item.taskId,jdbcType=INTEGER},
        #{item.taskName,jdbcType=VARCHAR},
        #{item.groupId,jdbcType=INTEGER},
        #{item.nodeId,jdbcType=INTEGER},
        #{item.status,jdbcType=VARCHAR},
        #{item.pid,jdbcType=INTEGER},
        #{item.realCommand,jdbcType=VARCHAR},
        #{item.parameter,jdbcType=VARCHAR},
        #{item.logName,jdbcType=VARCHAR},
        #{item.triggerTime,jdbcType=TIMESTAMP},
        #{item.startTime,jdbcType=TIMESTAMP},
        #{item.executeTime,jdbcType=TIMESTAMP},
        #{item.runningTime,jdbcType=TIMESTAMP},
        #{item.endTime,jdbcType=TIMESTAMP},
        #{item.executeType,jdbcType=INTEGER},
        #{item.runEngine,jdbcType=VARCHAR},
        #{item.returnCode,jdbcType=INTEGER},
        #{item.returnMsg,jdbcType=VARCHAR},
        #{item.fillDataTime,jdbcType=VARCHAR},
        #{item.batchNumber,jdbcType=BIGINT},
        #{item.rerunBatchNumber,jdbcType=BIGINT},
        #{item.isEnd,jdbcType=BIT},
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},
      </trim>
    </foreach>
  </insert>
</mapper>
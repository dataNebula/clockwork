<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.adx.clockwork.dao.mapper.clockwork.TbClockworkTaskSubscriptionMapper">
  <resultMap id="BaseResultMap" type="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscription">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="mobile_number" jdbcType="VARCHAR" property="mobileNumber" />
    <result column="subscription_time" jdbcType="TIME" property="subscriptionTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, task_id, user_id, user_name, user_email, mobile_number, subscription_time, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscriptionExample" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_clockwork_task_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_clockwork_task_subscription
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_task_subscription
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscriptionExample">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_task_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscription" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_task_subscription (task_id, user_id, user_name, 
      user_email, mobile_number, subscription_time, 
      create_time, update_time)
    values (#{taskId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{mobileNumber,jdbcType=VARCHAR}, #{subscriptionTime,jdbcType=TIME}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscription" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_task_subscription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="mobileNumber != null">
        mobile_number,
      </if>
      <if test="subscriptionTime != null">
        subscription_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="subscriptionTime != null">
        #{subscriptionTime,jdbcType=TIME},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscriptionExample" resultType="java.lang.Long">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_clockwork_task_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_subscription
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileNumber != null">
        mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.subscriptionTime != null">
        subscription_time = #{record.subscriptionTime,jdbcType=TIME},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_subscription
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      subscription_time = #{record.subscriptionTime,jdbcType=TIME},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscription">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_subscription
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="subscriptionTime != null">
        subscription_time = #{subscriptionTime,jdbcType=TIME},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkTaskSubscription">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_task_subscription
    set task_id = #{taskId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      subscription_time = #{subscriptionTime,jdbcType=TIME},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into tb_clockwork_task_subscription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      task_id,
      user_id,
      user_name,
      user_email,
      mobile_number,
      subscription_time,
      create_time,
      update_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=INTEGER},
        #{item.taskId,jdbcType=INTEGER},
        #{item.userId,jdbcType=INTEGER},
        #{item.userName,jdbcType=VARCHAR},
        #{item.userEmail,jdbcType=VARCHAR},
        #{item.mobileNumber,jdbcType=VARCHAR},
        #{item.subscriptionTime,jdbcType=TIME},
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},
      </trim>
    </foreach>
  </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.adx.clockwork.dao.mapper.clockwork.TbClockworkDagRangeCheckMapper">
  <resultMap id="BaseResultMap" type="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheck">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dag_id" jdbcType="INTEGER" property="dagId" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="task_info" jdbcType="VARCHAR" property="taskInfo" />
    <result column="is_range" jdbcType="BIT" property="isRange" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, dag_id, `operator`, task_info, is_range, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheckExample" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_clockwork_dag_range_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_clockwork_dag_range_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_dag_range_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheckExample">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_clockwork_dag_range_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheck" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_dag_range_check (dag_id, `operator`, task_info, 
      is_range, create_time, update_time
      )
    values (#{dagId,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{taskInfo,jdbcType=VARCHAR}, 
      #{isRange,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheck" useGeneratedKeys="true">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_clockwork_dag_range_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dagId != null">
        dag_id,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="taskInfo != null">
        task_info,
      </if>
      <if test="isRange != null">
        is_range,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dagId != null">
        #{dagId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="taskInfo != null">
        #{taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="isRange != null">
        #{isRange,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheckExample" resultType="java.lang.Long">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_clockwork_dag_range_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_dag_range_check
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dagId != null">
        dag_id = #{record.dagId,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        `operator` = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.taskInfo != null">
        task_info = #{record.taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.isRange != null">
        is_range = #{record.isRange,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_dag_range_check
    set id = #{record.id,jdbcType=INTEGER},
      dag_id = #{record.dagId,jdbcType=INTEGER},
      `operator` = #{record.operator,jdbcType=VARCHAR},
      task_info = #{record.taskInfo,jdbcType=VARCHAR},
      is_range = #{record.isRange,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheck">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_dag_range_check
    <set>
      <if test="dagId != null">
        dag_id = #{dagId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="taskInfo != null">
        task_info = #{taskInfo,jdbcType=VARCHAR},
      </if>
      <if test="isRange != null">
        is_range = #{isRange,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.creditease.adx.clockwork.common.entity.gen.TbClockworkDagRangeCheck">
    <!--
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_clockwork_dag_range_check
    set dag_id = #{dagId,jdbcType=INTEGER},
      `operator` = #{operator,jdbcType=VARCHAR},
      task_info = #{taskInfo,jdbcType=VARCHAR},
      is_range = #{isRange,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into tb_clockwork_dag_range_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      dag_id,
      `operator`,
      task_info,
      is_range,
      create_time,
      update_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=INTEGER},
        #{item.dagId,jdbcType=INTEGER},
        #{item.operator,jdbcType=VARCHAR},
        #{item.taskInfo,jdbcType=VARCHAR},
        #{item.isRange,jdbcType=BIT},
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},
      </trim>
    </foreach>
  </insert>
</mapper>
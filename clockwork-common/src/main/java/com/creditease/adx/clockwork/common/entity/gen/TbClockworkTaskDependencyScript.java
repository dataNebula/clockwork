/**
 * This file is automatically generated by MyBatis Generator, do not modify.
 */
package com.creditease.adx.clockwork.common.entity.gen;

import java.util.Date;

public class TbClockworkTaskDependencyScript {
    /**
     */
    private Integer id;

    /**
     */
    private Integer taskId;

    /**
     * 运行时是否下载
     */
    private Boolean isDownload;

    /**
     * 是否替换参数
     */
    private Boolean isReplace;

    /**
     * 依赖文件绝对路径
     */
    private String scriptFileAbsolutePath;

    /**
     * 创建日期
     */
    private Date createTime;

    /**
     * 更新时间
     */
    private Date updateTime;

    /**
     *
     * @return id
     */
    public Integer getId() {
        return id;
    }

    /**
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     *
     * @return taskId
     */
    public Integer getTaskId() {
        return taskId;
    }

    /**
     *
     * @param taskId
     */
    public void setTaskId(Integer taskId) {
        this.taskId = taskId;
    }

    /**
     * 运行时是否下载
     *
     * @return isDownload
     */
    public Boolean getIsDownload() {
        return isDownload;
    }

    /**
     * 运行时是否下载
     *
     * @param isDownload
     */
    public void setIsDownload(Boolean isDownload) {
        this.isDownload = isDownload;
    }

    /**
     * 是否替换参数
     *
     * @return isReplace
     */
    public Boolean getIsReplace() {
        return isReplace;
    }

    /**
     * 是否替换参数
     *
     * @param isReplace
     */
    public void setIsReplace(Boolean isReplace) {
        this.isReplace = isReplace;
    }

    /**
     * 依赖文件绝对路径
     *
     * @return scriptFileAbsolutePath
     */
    public String getScriptFileAbsolutePath() {
        return scriptFileAbsolutePath;
    }

    /**
     * 依赖文件绝对路径
     *
     * @param scriptFileAbsolutePath
     */
    public void setScriptFileAbsolutePath(String scriptFileAbsolutePath) {
        this.scriptFileAbsolutePath = scriptFileAbsolutePath == null ? null : scriptFileAbsolutePath.trim();
    }

    /**
     * 创建日期
     *
     * @return createTime
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 创建日期
     *
     * @param createTime
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * 更新时间
     *
     * @return updateTime
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TbClockworkTaskDependencyScript other = (TbClockworkTaskDependencyScript) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getTaskId() == null ? other.getTaskId() == null : this.getTaskId().equals(other.getTaskId()))
            && (this.getIsDownload() == null ? other.getIsDownload() == null : this.getIsDownload().equals(other.getIsDownload()))
            && (this.getIsReplace() == null ? other.getIsReplace() == null : this.getIsReplace().equals(other.getIsReplace()))
            && (this.getScriptFileAbsolutePath() == null ? other.getScriptFileAbsolutePath() == null : this.getScriptFileAbsolutePath().equals(other.getScriptFileAbsolutePath()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
        result = prime * result + ((getIsDownload() == null) ? 0 : getIsDownload().hashCode());
        result = prime * result + ((getIsReplace() == null) ? 0 : getIsReplace().hashCode());
        result = prime * result + ((getScriptFileAbsolutePath() == null) ? 0 : getScriptFileAbsolutePath().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", taskId=").append(taskId);
        sb.append(", isDownload=").append(isDownload);
        sb.append(", isReplace=").append(isReplace);
        sb.append(", scriptFileAbsolutePath=").append(scriptFileAbsolutePath);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}
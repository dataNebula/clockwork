/**
 * This file is automatically generated by MyBatis Generator, do not modify.
 */
package com.creditease.adx.clockwork.common.entity.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TbClockworkTaskDependencyScriptExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    protected Integer limitStart;

    protected Integer limitEnd;

    public TbClockworkTaskDependencyScriptExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    public Integer getLimitStart() {
        return limitStart;
    }

    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    public Integer getLimitEnd() {
        return limitEnd;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("task_id is null");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("task_id is not null");
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualTo(Integer value) {
            addCriterion("task_id =", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualTo(Integer value) {
            addCriterion("task_id <>", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThan(Integer value) {
            addCriterion("task_id >", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_id >=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThan(Integer value) {
            addCriterion("task_id <", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(Integer value) {
            addCriterion("task_id <=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIn(List<Integer> values) {
            addCriterion("task_id in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotIn(List<Integer> values) {
            addCriterion("task_id not in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdBetween(Integer value1, Integer value2) {
            addCriterion("task_id between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetween(Integer value1, Integer value2) {
            addCriterion("task_id not between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andIsDownloadIsNull() {
            addCriterion("is_download is null");
            return (Criteria) this;
        }

        public Criteria andIsDownloadIsNotNull() {
            addCriterion("is_download is not null");
            return (Criteria) this;
        }

        public Criteria andIsDownloadEqualTo(Boolean value) {
            addCriterion("is_download =", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadNotEqualTo(Boolean value) {
            addCriterion("is_download <>", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadGreaterThan(Boolean value) {
            addCriterion("is_download >", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_download >=", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadLessThan(Boolean value) {
            addCriterion("is_download <", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadLessThanOrEqualTo(Boolean value) {
            addCriterion("is_download <=", value, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadIn(List<Boolean> values) {
            addCriterion("is_download in", values, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadNotIn(List<Boolean> values) {
            addCriterion("is_download not in", values, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadBetween(Boolean value1, Boolean value2) {
            addCriterion("is_download between", value1, value2, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsDownloadNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_download not between", value1, value2, "isDownload");
            return (Criteria) this;
        }

        public Criteria andIsReplaceIsNull() {
            addCriterion("is_replace is null");
            return (Criteria) this;
        }

        public Criteria andIsReplaceIsNotNull() {
            addCriterion("is_replace is not null");
            return (Criteria) this;
        }

        public Criteria andIsReplaceEqualTo(Boolean value) {
            addCriterion("is_replace =", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceNotEqualTo(Boolean value) {
            addCriterion("is_replace <>", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceGreaterThan(Boolean value) {
            addCriterion("is_replace >", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_replace >=", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceLessThan(Boolean value) {
            addCriterion("is_replace <", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceLessThanOrEqualTo(Boolean value) {
            addCriterion("is_replace <=", value, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceIn(List<Boolean> values) {
            addCriterion("is_replace in", values, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceNotIn(List<Boolean> values) {
            addCriterion("is_replace not in", values, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceBetween(Boolean value1, Boolean value2) {
            addCriterion("is_replace between", value1, value2, "isReplace");
            return (Criteria) this;
        }

        public Criteria andIsReplaceNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_replace not between", value1, value2, "isReplace");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathIsNull() {
            addCriterion("script_file_absolute_path is null");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathIsNotNull() {
            addCriterion("script_file_absolute_path is not null");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathEqualTo(String value) {
            addCriterion("script_file_absolute_path =", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathNotEqualTo(String value) {
            addCriterion("script_file_absolute_path <>", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathGreaterThan(String value) {
            addCriterion("script_file_absolute_path >", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathGreaterThanOrEqualTo(String value) {
            addCriterion("script_file_absolute_path >=", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathLessThan(String value) {
            addCriterion("script_file_absolute_path <", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathLessThanOrEqualTo(String value) {
            addCriterion("script_file_absolute_path <=", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathLike(String value) {
            addCriterion("script_file_absolute_path like", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathNotLike(String value) {
            addCriterion("script_file_absolute_path not like", value, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathIn(List<String> values) {
            addCriterion("script_file_absolute_path in", values, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathNotIn(List<String> values) {
            addCriterion("script_file_absolute_path not in", values, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathBetween(String value1, String value2) {
            addCriterion("script_file_absolute_path between", value1, value2, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andScriptFileAbsolutePathNotBetween(String value1, String value2) {
            addCriterion("script_file_absolute_path not between", value1, value2, "scriptFileAbsolutePath");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_clockwork_task_dependency_script
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
/**
 * This file is automatically generated by MyBatis Generator, do not modify.
 */
package com.creditease.adx.clockwork.common.entity.gen;

import java.util.Date;

public class TbClockworkTaskRerun {
    /**
     * 主键
     */
    private Integer id;

    /**
     * taskID
     */
    private Integer taskId;

    /**
     * taskName
     */
    private String taskName;

    /**
     * 隶属task组id
     */
    private Integer groupId;

    /**
     * 参数
     */
    private String parameter;

    /**
     * 是否属于task组的第一个作业:1是,0否
     */
    private Boolean isFirst;

    /**
     * 1重启5补数
     */
    private Integer type;

    /**
     * 批次号
     */
    private Long rerunBatchNumber;

    /**
     * 操作人
     */
    private String operatorName;

    /**
     * 创建时间
     */
    private Date createTime;

    /**
     * 更新时间
     */
    private Date updateTime;

    /**
     * 任务json对象
     */
    private String taskJson;

    /**
     * 主键
     *
     * @return id
     */
    public Integer getId() {
        return id;
    }

    /**
     * 主键
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * taskID
     *
     * @return taskId
     */
    public Integer getTaskId() {
        return taskId;
    }

    /**
     * taskID
     *
     * @param taskId
     */
    public void setTaskId(Integer taskId) {
        this.taskId = taskId;
    }

    /**
     * taskName
     *
     * @return taskName
     */
    public String getTaskName() {
        return taskName;
    }

    /**
     * taskName
     *
     * @param taskName
     */
    public void setTaskName(String taskName) {
        this.taskName = taskName == null ? null : taskName.trim();
    }

    /**
     * 隶属task组id
     *
     * @return groupId
     */
    public Integer getGroupId() {
        return groupId;
    }

    /**
     * 隶属task组id
     *
     * @param groupId
     */
    public void setGroupId(Integer groupId) {
        this.groupId = groupId;
    }

    /**
     * 参数
     *
     * @return parameter
     */
    public String getParameter() {
        return parameter;
    }

    /**
     * 参数
     *
     * @param parameter
     */
    public void setParameter(String parameter) {
        this.parameter = parameter == null ? null : parameter.trim();
    }

    /**
     * 是否属于task组的第一个作业:1是,0否
     *
     * @return isFirst
     */
    public Boolean getIsFirst() {
        return isFirst;
    }

    /**
     * 是否属于task组的第一个作业:1是,0否
     *
     * @param isFirst
     */
    public void setIsFirst(Boolean isFirst) {
        this.isFirst = isFirst;
    }

    /**
     * 1重启5补数
     *
     * @return type
     */
    public Integer getType() {
        return type;
    }

    /**
     * 1重启5补数
     *
     * @param type
     */
    public void setType(Integer type) {
        this.type = type;
    }

    /**
     * 批次号
     *
     * @return rerunBatchNumber
     */
    public Long getRerunBatchNumber() {
        return rerunBatchNumber;
    }

    /**
     * 批次号
     *
     * @param rerunBatchNumber
     */
    public void setRerunBatchNumber(Long rerunBatchNumber) {
        this.rerunBatchNumber = rerunBatchNumber;
    }

    /**
     * 操作人
     *
     * @return operatorName
     */
    public String getOperatorName() {
        return operatorName;
    }

    /**
     * 操作人
     *
     * @param operatorName
     */
    public void setOperatorName(String operatorName) {
        this.operatorName = operatorName == null ? null : operatorName.trim();
    }

    /**
     * 创建时间
     *
     * @return createTime
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * 更新时间
     *
     * @return updateTime
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * 任务json对象
     *
     * @return taskJson
     */
    public String getTaskJson() {
        return taskJson;
    }

    /**
     * 任务json对象
     *
     * @param taskJson
     */
    public void setTaskJson(String taskJson) {
        this.taskJson = taskJson == null ? null : taskJson.trim();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TbClockworkTaskRerun other = (TbClockworkTaskRerun) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getTaskId() == null ? other.getTaskId() == null : this.getTaskId().equals(other.getTaskId()))
            && (this.getTaskName() == null ? other.getTaskName() == null : this.getTaskName().equals(other.getTaskName()))
            && (this.getGroupId() == null ? other.getGroupId() == null : this.getGroupId().equals(other.getGroupId()))
            && (this.getParameter() == null ? other.getParameter() == null : this.getParameter().equals(other.getParameter()))
            && (this.getIsFirst() == null ? other.getIsFirst() == null : this.getIsFirst().equals(other.getIsFirst()))
            && (this.getType() == null ? other.getType() == null : this.getType().equals(other.getType()))
            && (this.getRerunBatchNumber() == null ? other.getRerunBatchNumber() == null : this.getRerunBatchNumber().equals(other.getRerunBatchNumber()))
            && (this.getOperatorName() == null ? other.getOperatorName() == null : this.getOperatorName().equals(other.getOperatorName()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()))
            && (this.getTaskJson() == null ? other.getTaskJson() == null : this.getTaskJson().equals(other.getTaskJson()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
        result = prime * result + ((getTaskName() == null) ? 0 : getTaskName().hashCode());
        result = prime * result + ((getGroupId() == null) ? 0 : getGroupId().hashCode());
        result = prime * result + ((getParameter() == null) ? 0 : getParameter().hashCode());
        result = prime * result + ((getIsFirst() == null) ? 0 : getIsFirst().hashCode());
        result = prime * result + ((getType() == null) ? 0 : getType().hashCode());
        result = prime * result + ((getRerunBatchNumber() == null) ? 0 : getRerunBatchNumber().hashCode());
        result = prime * result + ((getOperatorName() == null) ? 0 : getOperatorName().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        result = prime * result + ((getTaskJson() == null) ? 0 : getTaskJson().hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", taskId=").append(taskId);
        sb.append(", taskName=").append(taskName);
        sb.append(", groupId=").append(groupId);
        sb.append(", parameter=").append(parameter);
        sb.append(", isFirst=").append(isFirst);
        sb.append(", type=").append(type);
        sb.append(", rerunBatchNumber=").append(rerunBatchNumber);
        sb.append(", operatorName=").append(operatorName);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", taskJson=").append(taskJson);
        sb.append("]");
        return sb.toString();
    }
}
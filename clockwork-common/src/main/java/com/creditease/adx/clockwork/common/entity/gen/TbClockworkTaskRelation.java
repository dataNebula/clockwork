/**
 * This file is automatically generated by MyBatis Generator, do not modify.
 */
package com.creditease.adx.clockwork.common.entity.gen;

import java.util.Date;

public class TbClockworkTaskRelation {
    /**
     * 主键
     */
    private Integer id;

    /**
     * task的主键
     */
    private Integer taskId;

    /**
     */
    private String taskName;

    /**
     * 父task的主键
     */
    private Integer fatherTaskId;

    /**
     * 父task的名字
     */
    private String fatherTaskName;

    /**
     * 是否有效
     */
    private Boolean isEffective;

    /**
     * 创建时间
     */
    private Date createTime;

    /**
     * 更新时间
     */
    private Date updateTime;

    /**
     * 主键
     *
     * @return id
     */
    public Integer getId() {
        return id;
    }

    /**
     * 主键
     *
     * @param id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * task的主键
     *
     * @return taskId
     */
    public Integer getTaskId() {
        return taskId;
    }

    /**
     * task的主键
     *
     * @param taskId
     */
    public void setTaskId(Integer taskId) {
        this.taskId = taskId;
    }

    /**
     *
     * @return taskName
     */
    public String getTaskName() {
        return taskName;
    }

    /**
     *
     * @param taskName
     */
    public void setTaskName(String taskName) {
        this.taskName = taskName == null ? null : taskName.trim();
    }

    /**
     * 父task的主键
     *
     * @return fatherTaskId
     */
    public Integer getFatherTaskId() {
        return fatherTaskId;
    }

    /**
     * 父task的主键
     *
     * @param fatherTaskId
     */
    public void setFatherTaskId(Integer fatherTaskId) {
        this.fatherTaskId = fatherTaskId;
    }

    /**
     * 父task的名字
     *
     * @return fatherTaskName
     */
    public String getFatherTaskName() {
        return fatherTaskName;
    }

    /**
     * 父task的名字
     *
     * @param fatherTaskName
     */
    public void setFatherTaskName(String fatherTaskName) {
        this.fatherTaskName = fatherTaskName == null ? null : fatherTaskName.trim();
    }

    /**
     * 是否有效
     *
     * @return isEffective
     */
    public Boolean getIsEffective() {
        return isEffective;
    }

    /**
     * 是否有效
     *
     * @param isEffective
     */
    public void setIsEffective(Boolean isEffective) {
        this.isEffective = isEffective;
    }

    /**
     * 创建时间
     *
     * @return createTime
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 创建时间
     *
     * @param createTime
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * 更新时间
     *
     * @return updateTime
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 更新时间
     *
     * @param updateTime
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        TbClockworkTaskRelation other = (TbClockworkTaskRelation) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getTaskId() == null ? other.getTaskId() == null : this.getTaskId().equals(other.getTaskId()))
            && (this.getTaskName() == null ? other.getTaskName() == null : this.getTaskName().equals(other.getTaskName()))
            && (this.getFatherTaskId() == null ? other.getFatherTaskId() == null : this.getFatherTaskId().equals(other.getFatherTaskId()))
            && (this.getFatherTaskName() == null ? other.getFatherTaskName() == null : this.getFatherTaskName().equals(other.getFatherTaskName()))
            && (this.getIsEffective() == null ? other.getIsEffective() == null : this.getIsEffective().equals(other.getIsEffective()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
        result = prime * result + ((getTaskName() == null) ? 0 : getTaskName().hashCode());
        result = prime * result + ((getFatherTaskId() == null) ? 0 : getFatherTaskId().hashCode());
        result = prime * result + ((getFatherTaskName() == null) ? 0 : getFatherTaskName().hashCode());
        result = prime * result + ((getIsEffective() == null) ? 0 : getIsEffective().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", taskId=").append(taskId);
        sb.append(", taskName=").append(taskName);
        sb.append(", fatherTaskId=").append(fatherTaskId);
        sb.append(", fatherTaskName=").append(fatherTaskName);
        sb.append(", isEffective=").append(isEffective);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}